// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stock_exchange.proto

package build

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Stock struct {
	Ticker               string   `protobuf:"bytes,1,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Price                float32  `protobuf:"fixed32,2,opt,name=price,proto3" json:"price,omitempty"`
	UpdatedAt            int32    `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stock) Reset()         { *m = Stock{} }
func (m *Stock) String() string { return proto.CompactTextString(m) }
func (*Stock) ProtoMessage()    {}
func (*Stock) Descriptor() ([]byte, []int) {
	return fileDescriptor_stock_exchange_5136fa48f14871de, []int{0}
}
func (m *Stock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stock.Unmarshal(m, b)
}
func (m *Stock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stock.Marshal(b, m, deterministic)
}
func (dst *Stock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stock.Merge(dst, src)
}
func (m *Stock) XXX_Size() int {
	return xxx_messageInfo_Stock.Size(m)
}
func (m *Stock) XXX_DiscardUnknown() {
	xxx_messageInfo_Stock.DiscardUnknown(m)
}

var xxx_messageInfo_Stock proto.InternalMessageInfo

func (m *Stock) GetTicker() string {
	if m != nil {
		return m.Ticker
	}
	return ""
}

func (m *Stock) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Stock) GetUpdatedAt() int32 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

type GetStockPriceRequest struct {
	Ticker               []string `protobuf:"bytes,1,rep,name=ticker,proto3" json:"ticker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStockPriceRequest) Reset()         { *m = GetStockPriceRequest{} }
func (m *GetStockPriceRequest) String() string { return proto.CompactTextString(m) }
func (*GetStockPriceRequest) ProtoMessage()    {}
func (*GetStockPriceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_stock_exchange_5136fa48f14871de, []int{1}
}
func (m *GetStockPriceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStockPriceRequest.Unmarshal(m, b)
}
func (m *GetStockPriceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStockPriceRequest.Marshal(b, m, deterministic)
}
func (dst *GetStockPriceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStockPriceRequest.Merge(dst, src)
}
func (m *GetStockPriceRequest) XXX_Size() int {
	return xxx_messageInfo_GetStockPriceRequest.Size(m)
}
func (m *GetStockPriceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStockPriceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStockPriceRequest proto.InternalMessageInfo

func (m *GetStockPriceRequest) GetTicker() []string {
	if m != nil {
		return m.Ticker
	}
	return nil
}

type GetStockPriceResponse struct {
	Stock                []*Stock `protobuf:"bytes,1,rep,name=stock,proto3" json:"stock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStockPriceResponse) Reset()         { *m = GetStockPriceResponse{} }
func (m *GetStockPriceResponse) String() string { return proto.CompactTextString(m) }
func (*GetStockPriceResponse) ProtoMessage()    {}
func (*GetStockPriceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_stock_exchange_5136fa48f14871de, []int{2}
}
func (m *GetStockPriceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStockPriceResponse.Unmarshal(m, b)
}
func (m *GetStockPriceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStockPriceResponse.Marshal(b, m, deterministic)
}
func (dst *GetStockPriceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStockPriceResponse.Merge(dst, src)
}
func (m *GetStockPriceResponse) XXX_Size() int {
	return xxx_messageInfo_GetStockPriceResponse.Size(m)
}
func (m *GetStockPriceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStockPriceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetStockPriceResponse proto.InternalMessageInfo

func (m *GetStockPriceResponse) GetStock() []*Stock {
	if m != nil {
		return m.Stock
	}
	return nil
}

func init() {
	proto.RegisterType((*Stock)(nil), "build.Stock")
	proto.RegisterType((*GetStockPriceRequest)(nil), "build.GetStockPriceRequest")
	proto.RegisterType((*GetStockPriceResponse)(nil), "build.GetStockPriceResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StockExchangeClient is the client API for StockExchange service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StockExchangeClient interface {
	GetStockPrice(ctx context.Context, in *GetStockPriceRequest, opts ...grpc.CallOption) (*GetStockPriceResponse, error)
}

type stockExchangeClient struct {
	cc *grpc.ClientConn
}

func NewStockExchangeClient(cc *grpc.ClientConn) StockExchangeClient {
	return &stockExchangeClient{cc}
}

func (c *stockExchangeClient) GetStockPrice(ctx context.Context, in *GetStockPriceRequest, opts ...grpc.CallOption) (*GetStockPriceResponse, error) {
	out := new(GetStockPriceResponse)
	err := c.cc.Invoke(ctx, "/build.StockExchange/GetStockPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StockExchangeServer is the server API for StockExchange service.
type StockExchangeServer interface {
	GetStockPrice(context.Context, *GetStockPriceRequest) (*GetStockPriceResponse, error)
}

func RegisterStockExchangeServer(s *grpc.Server, srv StockExchangeServer) {
	s.RegisterService(&_StockExchange_serviceDesc, srv)
}

func _StockExchange_GetStockPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStockPriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockExchangeServer).GetStockPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/build.StockExchange/GetStockPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockExchangeServer).GetStockPrice(ctx, req.(*GetStockPriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StockExchange_serviceDesc = grpc.ServiceDesc{
	ServiceName: "build.StockExchange",
	HandlerType: (*StockExchangeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStockPrice",
			Handler:    _StockExchange_GetStockPrice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stock_exchange.proto",
}

func init() {
	proto.RegisterFile("stock_exchange.proto", fileDescriptor_stock_exchange_5136fa48f14871de)
}

var fileDescriptor_stock_exchange_5136fa48f14871de = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x2e, 0xc9, 0x4f,
	0xce, 0x8e, 0x4f, 0xad, 0x48, 0xce, 0x48, 0xcc, 0x4b, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0x62, 0x4d, 0x2a, 0xcd, 0xcc, 0x49, 0x51, 0x0a, 0xe1, 0x62, 0x0d, 0x06, 0x49, 0x0b, 0x89,
	0x71, 0xb1, 0x95, 0x64, 0x26, 0x67, 0xa7, 0x16, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x41,
	0x79, 0x42, 0x22, 0x5c, 0xac, 0x05, 0x45, 0x99, 0xc9, 0xa9, 0x12, 0x4c, 0x40, 0x61, 0xa6, 0x20,
	0x08, 0x47, 0x48, 0x96, 0x8b, 0xab, 0xb4, 0x20, 0x25, 0xb1, 0x24, 0x35, 0x25, 0x3e, 0xb1, 0x44,
	0x82, 0x19, 0x28, 0xc5, 0x1a, 0xc4, 0x09, 0x15, 0x71, 0x2c, 0x51, 0xd2, 0xe3, 0x12, 0x71, 0x4f,
	0x2d, 0x01, 0x1b, 0x1c, 0x00, 0x52, 0x1f, 0x94, 0x5a, 0x58, 0x9a, 0x5a, 0x5c, 0x82, 0x62, 0x09,
	0x33, 0xc2, 0x12, 0x25, 0x6b, 0x2e, 0x51, 0x34, 0xf5, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42,
	0x4a, 0x5c, 0xac, 0x60, 0xd7, 0x83, 0xd5, 0x73, 0x1b, 0xf1, 0xe8, 0x81, 0x5d, 0xad, 0x07, 0x56,
	0x19, 0x04, 0x91, 0x32, 0x8a, 0xe5, 0xe2, 0x05, 0xf3, 0x5d, 0xa1, 0x1e, 0x14, 0xf2, 0xe1, 0xe2,
	0x45, 0x31, 0x4d, 0x48, 0x1a, 0xaa, 0x0d, 0x9b, 0x9b, 0xa4, 0x64, 0xb0, 0x4b, 0x42, 0x1c, 0xa0,
	0xc4, 0x90, 0xc4, 0x06, 0x0e, 0x2f, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x85, 0x78, 0x6e,
	0x22, 0x47, 0x01, 0x00, 0x00,
}
